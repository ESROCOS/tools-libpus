-- ASN.1 definitions for CCSDS packets
-- (cf. ECSS-E-ST-70-41C section 7.4)

PUS-CcsdsPacket DEFINITIONS ::=
BEGIN

    IMPORTS 
    PusUInt4, PusUInt11, PusUInt14, PusUInt16 FROM PUS-NbitIntegers
    PusTime FROM PUS-Time
    PusServiceType, PusSubserviceType FROM PUS-Services
    PusTM-1-1-Data FROM PUS-ST01;


    -- Packet version number field
    PusPacketVersion ::= ENUMERATED
    {
        pusCcsdsV1  (0) -- Version 0 for CCSDS 133. 0-B-1 (version 1 CCSDS packet)
    }

    -- Packet type field (1 bit)
    PusPacketType ::= ENUMERATED
    {
        pusTm  (0),
        pusTc  (1)
    }
    
    -- Packet secondary header flag (1 bit)
    PusSecondaryHeaderFlag ::= BOOLEAN
    
    -- Application Process ID (11 bits)
    PusApid ::= PusUInt11
    
    -- reserved APIDs
    pusApidTime PusApid ::= 0       -- time packets
    pusApidIdle PusApid ::= 2047    -- idle packets
    
    -- Sequence flags (3 bits)
    PusSequenceFlags ::= ENUMERATED
    {
        pusStandalonePacket (3)     -- all PUS standard packets are standalone (11)
    }
    
    -- Sequence count (14 bits)
    PusSequenceCount ::= PusUInt14
    
    -- Packet data length (16 bits)
    PusPacketDataLength ::= PusUInt16

    -- PUS version numver (4 bits)
    PusVersionNumber ::= ENUMERATED
    {
        pusV0       (0),    -- ESA PSS-07-101
        pusV1       (1),    -- ECSS-E-70-41A
        pusV2       (2)     -- ECSS-E-ST-70-41C
    }
    
    pusVersionCurrent PusVersionNumber ::= pusV2    -- current version
    
    -- Spacecraft time reference status
    PusTimeReferenceStatus ::= PusUInt4

    pusTimeReferenceStatusNone PusTimeReferenceStatus ::= 0 -- value for application processes without the capability to report it
    
    -- Message type counter (per destination and type)
    PusMessageTypeCounter ::= PusUInt16
    
    pusMessageTypeCounterNone PusMessageTypeCounter ::= 0   -- value for application processes without such counter
    
    -- Acknowledgement flags (4 bits)
    PusAcknowledgementFlags ::= SEQUENCE
    {
        acceptanceReportRequested   BOOLEAN,
        startReportRequested        BOOLEAN,
        progressReportRequested     BOOLEAN,
        completionReportRequested   BOOLEAN
    }
    
    -- Packet error control checksum (16 bits)
    PusChecksum ::= PusUInt16
    
    -- TM secondary header
    PusTmHeader ::= SEQUENCE
    {
        pusVersion      PusVersionNumber,
        timeRefStatus   PusTimeReferenceStatus,
        service         PusServiceType,
        subtype         PusSubserviceType,
        msgTypeCount    PusMessageTypeCounter,
        destination     PusApid,
        time            PusTime
        -- no spare bits
    }
    
    -- TM actual data
    PusTmSourceData ::= CHOICE
    {
        st-1-1 PusTM-1-1-Data
    }
    
    -- TM user data
    PusTmData ::= SEQUENCE
    {
        data        PusTmSourceData,
        -- no spare bits
        checksum    PusChecksum
    }

    -- TC secondary header
    PusTcHeader ::= SEQUENCE
    {
        pusVersion      PusVersionNumber,
        ackFlags        PusAcknowledgementFlags,
        service         PusServiceType,
        subtype         PusSubserviceType,
        source          PusApid
        -- no spare bits
    }
    
    -- TC actual data
    PusTcApplicationData ::= INTEGER -- TBD
    
    -- TC user data
    PusTcData ::= SEQUENCE
    {
        data        PusTcApplicationData,
        -- no spare bits
        checksum    PusChecksum
    }
    
    -- TM/TC header + data
    PusTmHeaderData ::= SEQUENCE
    {
        header  PusTmHeader,
        data    PusTmData
    }
    PusTcHeaderData ::= SEQUENCE
    {
        header  PusTcHeader,
        data    PusTcData
    }


    -- Packet data
    PusPacketData ::= CHOICE
    {
        tmWithHeader    PusTmHeaderData,
        tmWithoutHeader PusTmData,
        tcWithHeader    PusTcHeaderData,
        tcWithoutHeader PusTcData
    }

    -- CCSDS packet
    PusPacket ::= SEQUENCE
    {
        packetVersion       PusPacketVersion,
        packetType          PusPacketType,
        secondaryHeaderFlag PusSecondaryHeaderFlag,
        apid                PusApid,
        sequenceFlags       PusSequenceFlags,
        sequenceCount       PusSequenceCount,
        dataLength          PusPacketDataLength,
        data                PusPacketData
    }


END
