-- ASN.1 definitions for CCSDS packets
-- (cf. ECSS-E-ST-70-41C section 7.4)

PUS-CcsdsPacket DEFINITIONS ::=
BEGIN

    IMPORTS 
    PusTime FROM PUS-Time

    PusServiceType, PusSubserviceType FROM PUS-Services

    PusVersionNumber, PusTimeReferenceStatus, PusMessageTypeCounter, PusPacketType, PusApid, 
    PusChecksum, PusAcknowledgementFlags, PusPacketVersion, PusSecondaryHeaderFlag, PusSequenceFlags, 
    PusSequenceCount, PusPacketDataLength FROM PUS-CcsdsPacketFields

    PusTM-1-X-Data FROM PUS-ST01
    PusTM-3-25-Data FROM PUS-ST03
    PusTM-5-X-Data FROM PUS-ST05
    ;


    -- TM secondary header
    PusTmHeader ::= SEQUENCE
    {
        pusVersion      PusVersionNumber,
        timeRefStatus   PusTimeReferenceStatus,
        service         PusServiceType,
        subtype         PusSubserviceType,
        msgTypeCount    PusMessageTypeCounter,
        destination     PusApid,
        time            PusTime
        -- no spare bits
    }
    
    -- TM actual data
    PusTmSourceData ::= CHOICE
    {
        st-1-X PusTM-1-X-Data,
        st-3-25 PusTM-3-25-Data,
        st-5-X PusTM-5-X-Data
    }
    
    -- TC secondary header
    PusTcHeader ::= SEQUENCE
    {
        pusVersion      PusVersionNumber,
        ackFlags        PusAcknowledgementFlags,
        service         PusServiceType,
        subtype         PusSubserviceType,
        source          PusApid
        -- no spare bits
    }
    
    -- TC actual data
    PusTcApplicationData ::= INTEGER -- TBD
    
    -- TM/TC header + data
    PusTmHeaderData ::= SEQUENCE
    {
        header  PusTmHeader,
        data    PusTmSourceData
    }
    PusTcHeaderData ::= SEQUENCE
    {
        header  PusTcHeader,
        data    PusTcApplicationData
    }


    -- Packet data
    PusPacketData ::= CHOICE
    {
        tmData          PusTmHeaderData,
        tmDataNoHeader  PusTmSourceData,
        tcData          PusTcHeaderData,
        tcDataNoHeader  PusTcApplicationData
    }

    -- CCSDS packet
    -- TM/TC user data contains only the source/application data. No spare bits or checksum is used.
    -- Spare bits are not needed because TASTE handles the packing of the fields.
    -- Checksum is not used because TASTE handles encoding/decoding, and there might be 
    -- mismatched checksums if a message is transmitted between hosts with different endianness. 
    PusPacket ::= SEQUENCE
    {
        packetVersion       PusPacketVersion,
        packetType          PusPacketType,
        secondaryHeaderFlag PusSecondaryHeaderFlag,
        apid                PusApid,
        sequenceFlags       PusSequenceFlags,
        sequenceCount       PusSequenceCount,
        dataLength          PusPacketDataLength,
        data                PusPacketData
    }


END
