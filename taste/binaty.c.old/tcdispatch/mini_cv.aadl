-- Automatically Generated - For use with AADL2GlueC only - Do NOT modify! --

SUBPROGRAM tcTrigger
END tcTrigger;

SUBPROGRAM IMPLEMENTATION tcTrigger.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tcTrigger.C;

SUBPROGRAM tcRequest
FEATURES
	tcPacket:IN PARAMETER DataView::PusPacket {encoding=>NATIVE;};
	isAvailable:IN PARAMETER DataView::T_Boolean {encoding=>NATIVE;};
END tcRequest;

SUBPROGRAM IMPLEMENTATION tcRequest.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tcRequest.C;

SUBPROGRAM tc17
FEATURES
	tcPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
END tc17;

SUBPROGRAM IMPLEMENTATION tc17.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tc17.C;

SUBPROGRAM tc08
FEATURES
	tcPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
END tc08;

SUBPROGRAM IMPLEMENTATION tc08.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tc08.C;

SUBPROGRAM tc19
FEATURES
	tcPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
END tc19;

SUBPROGRAM IMPLEMENTATION tc19.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tc19.C;

SUBPROGRAM tc09
FEATURES
	tcPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
END tc09;

SUBPROGRAM IMPLEMENTATION tc09.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tc09.C;

SUBPROGRAM tc12
FEATURES
	tcPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
END tc12;

SUBPROGRAM IMPLEMENTATION tc12.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tc12.C;

SUBPROGRAM tc11
FEATURES
	tcPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
END tc11;

SUBPROGRAM IMPLEMENTATION tc11.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tc11.C;

SUBPROGRAM tc18
FEATURES
	tcPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
END tc18;

SUBPROGRAM IMPLEMENTATION tc18.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tc18.C;

SUBPROGRAM tc23
END tc23;

SUBPROGRAM IMPLEMENTATION tc23.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tc23.C;

SUBPROGRAM tc20
FEATURES
	tcPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
END tc20;

SUBPROGRAM IMPLEMENTATION tc20.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END tc20.C;

SUBPROGRAM check_queue
FEATURES
	res:IN PARAMETER DataView::T_Boolean {encoding=>NATIVE;};
END check_queue;

SUBPROGRAM IMPLEMENTATION check_queue.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END check_queue.C;

SUBPROGRAM check_queue_vt
FEATURES
	res:IN PARAMETER DataView::T_Boolean {encoding=>NATIVE;};
END check_queue_vt;

SUBPROGRAM IMPLEMENTATION check_queue_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END check_queue_vt.C;

SUBPROGRAM incCount_vt
FEATURES
	tmPacket:IN PARAMETER DataView::PusPacket {encoding=>NATIVE;};
	isAvailable:IN PARAMETER DataView::PusSt01FailureCode {encoding=>NATIVE;};
END incCount_vt;

SUBPROGRAM IMPLEMENTATION incCount_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END incCount_vt.C;

SUBPROGRAM ACK_vt
FEATURES
	tcPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
	reportType:OUT PARAMETER DataView::PusSubserviceType {encoding=>NATIVE;};
	error:OUT PARAMETER DataView::PusSt01FailureCode {encoding=>NATIVE;};
	errorInfo:OUT PARAMETER DataView::PusSt01FailureInfo {encoding=>NATIVE;};
	step:OUT PARAMETER DataView::PusStepId {encoding=>NATIVE;};
END ACK_vt;

SUBPROGRAM IMPLEMENTATION ACK_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END ACK_vt.C;

SUBPROGRAM getApid_vt
FEATURES
	apid:IN PARAMETER DataView::PusApid {encoding=>NATIVE;};
END getApid_vt;

SUBPROGRAM IMPLEMENTATION getApid_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END getApid_vt.C;

SUBPROGRAM getSequenceCount_vt
FEATURES
	sequenceCount:IN PARAMETER DataView::PusSequenceCount {encoding=>NATIVE;};
END getSequenceCount_vt;

SUBPROGRAM IMPLEMENTATION getSequenceCount_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END getSequenceCount_vt.C;

SUBPROGRAM newTm_vt
FEATURES
	tmPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
END newTm_vt;

SUBPROGRAM IMPLEMENTATION newTm_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END newTm_vt.C;

SUBPROGRAM getNextEvent_vt
FEATURES
	actualCounter:OUT PARAMETER DataView::PusUInt64 {encoding=>NATIVE;};
	eventInfo:IN PARAMETER DataView::PusSt05Event {encoding=>NATIVE;};
	nextCounter:IN PARAMETER DataView::PusUInt64 {encoding=>NATIVE;};
END getNextEvent_vt;

SUBPROGRAM IMPLEMENTATION getNextEvent_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END getNextEvent_vt.C;

SUBPROGRAM newTc_vt
FEATURES
	tcPacket:OUT PARAMETER DataView::PusPacket {encoding=>NATIVE;};
END newTc_vt;

SUBPROGRAM IMPLEMENTATION newTc_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END newTc_vt.C;

SUBPROGRAM pushNewEvent_vt
FEATURES
	eventInfo:OUT PARAMETER DataView::PusSt05Event {encoding=>NATIVE;};
END pushNewEvent_vt;

SUBPROGRAM IMPLEMENTATION pushNewEvent_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END pushNewEvent_vt.C;

SUBPROGRAM getParamValue_vt
FEATURES
	paramId:OUT PARAMETER DataView::PusSt03ParameterId {encoding=>NATIVE;};
	paramValue:IN PARAMETER DataView::PusSt03StoredParam {encoding=>NATIVE;};
	isAvailable:IN PARAMETER DataView::PusSt01FailureCode {encoding=>NATIVE;};
END getParamValue_vt;

SUBPROGRAM IMPLEMENTATION getParamValue_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END getParamValue_vt.C;

SUBPROGRAM loadDirect_vt
FEATURES
	obcpId:OUT PARAMETER DataView::PusSt18ObcpId {encoding=>NATIVE;};
	obcpCode:OUT PARAMETER DataView::PusSt18ObcpCode {encoding=>NATIVE;};
END loadDirect_vt;

SUBPROGRAM IMPLEMENTATION loadDirect_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END loadDirect_vt.C;

SUBPROGRAM loadReference_vt
FEATURES
	referenceData:OUT PARAMETER DataView::PusTC_18_13_Data {encoding=>NATIVE;};
END loadReference_vt;

SUBPROGRAM IMPLEMENTATION loadReference_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END loadReference_vt.C;

SUBPROGRAM getOnBoardParam_vt
FEATURES
	paramId:OUT PARAMETER DataView::PusSt20OnBoardParameterId {encoding=>NATIVE;};
	paramValue:IN PARAMETER DataView::PusSt20StoredParam {encoding=>NATIVE;};
	isAvailable:IN PARAMETER DataView::PusSt01FailureCode {encoding=>NATIVE;};
END getOnBoardParam_vt;

SUBPROGRAM IMPLEMENTATION getOnBoardParam_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END getOnBoardParam_vt.C;

SUBPROGRAM setOnBoardParam_vt
FEATURES
	paramId:OUT PARAMETER DataView::PusSt20OnBoardParameterId {encoding=>NATIVE;};
	paramValue:OUT PARAMETER DataView::PusSt20StoredParam {encoding=>NATIVE;};
END setOnBoardParam_vt;

SUBPROGRAM IMPLEMENTATION setOnBoardParam_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END setOnBoardParam_vt.C;

SUBPROGRAM copy_vt
END copy_vt;

SUBPROGRAM IMPLEMENTATION copy_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END copy_vt.C;

SUBPROGRAM delete_vt
END delete_vt;

SUBPROGRAM IMPLEMENTATION delete_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END delete_vt.C;

SUBPROGRAM create_vt
END create_vt;

SUBPROGRAM IMPLEMENTATION create_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END create_vt.C;

SUBPROGRAM getAttributes_vt
END getAttributes_vt;

SUBPROGRAM IMPLEMENTATION getAttributes_vt.C
PROPERTIES
	FV_Name => "tcdispatch";
	Source_Language => C;
END getAttributes_vt.C;

